{"version":3,"sources":["Components/Header.js","Helpers/Helpers.js","Components/Square.js","Components/Board.js","Components/Game.js","App.js","index.js"],"names":["Header","calculateWinner","squares","lines","i","length","a","b","c","console","log","winner","index","Square","win","value","onClick","style","className","Board","wins","Array","fill","updateWins","indices","map","square","Game","useState","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","xO","historyPoint","slice","current","_step","move","destination","step","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adce1aab.chunk.js","sourcesContent":["import React from 'react' \r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <h1>Tic Tac Toe</h1>\r\n            <h3>Strike three and place your mark</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","export function calculateWinner(squares){\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4 ,6]\r\n    ];\r\n\r\n    for (let i = 0; i< lines.length; i++){\r\n        const [a,b,c] = lines[i];\r\n        if (squares[a] && squares[a]===squares[b] && squares[a]===squares[c]){\r\n            console.log(\"i\",i)\r\n            return {winner: squares[a], index: i}\r\n        }\r\n    }\r\n    return {winner: null, index: null};\r\n}","import React from 'react';\r\n\r\nconst Square = ({win, value, onClick}) => {\r\n    let style = null;\r\n    if (win){\r\n        style = `win ${value}`;\r\n    }\r\n    else{\r\n        style = value ? `squares ${value}`: 'squares';\r\n    }\r\n    \r\n    return(        \r\n        <button className={ style } onClick={ onClick }>\r\n            { value }\r\n        </button>        \r\n    );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\nimport { calculateWinner } from '../Helpers/Helpers';\r\n\r\n\r\nconst Board = ({ squares, onClick }) => {\r\n  let wins = Array(9).fill(null)\r\n  const winningIndex = calculateWinner(squares).index;\r\n\r\n  function updateWins(indices){\r\n    for (let i = 0; i<3; i++){\r\n      wins[indices[i]] = 1\r\n    }\r\n  }\r\n\r\n  switch (winningIndex) {\r\n    case 0:\r\n      updateWins([0,1,2])      \r\n      break;\r\n    case 1:\r\n      updateWins([3,4,5])      \r\n      break;\r\n    case 2:\r\n      updateWins([6,7,8])      \r\n      break;\r\n    case 3:\r\n      updateWins([0,3,6])      \r\n      break;\r\n    case 4:\r\n      updateWins([1,4,7])      \r\n      break;\r\n    case 5:\r\n      updateWins([2,5,8])      \r\n      break;\r\n    case 6:\r\n      updateWins([0,4,8])      \r\n      break;\r\n    case 7:\r\n      updateWins([2,4,6])      \r\n      break;\r\n    default:\r\n      wins = Array(9).fill(null)\r\n}\r\n  return(\r\n    <div className=\"board\">\r\n      {squares.map((square, i) => {\r\n        console.log(\"win\", wins[i])\r\n        return (\r\n        <Square key={i} win={wins[i]} value={square} onClick={() => onClick(i)} />\r\n      )})}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default Board;","import React, { useState } from \"react\";\r\nimport { calculateWinner } from \"../Helpers/Helpers\";\r\nimport Board from \"./Board\";\r\n\r\nconst Game = () => {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [xIsNext, setXisNext] = useState(true);\r\n  const winner = calculateWinner(history[stepNumber]).winner;\r\n  const xO = xIsNext ? \"X\" : \"O\";\r\n  \r\n  const handleClick = (i) => {\r\n    const historyPoint = history.slice(0, stepNumber + 1);\r\n    const current = historyPoint[stepNumber];\r\n    const squares = [...current];\r\n    // return if won or occupied\r\n    if (winner || squares[i]) return;\r\n    // select square\r\n    squares[i] = xO;\r\n    setHistory([...historyPoint, squares]);\r\n    setStepNumber(historyPoint.length);\r\n    setXisNext(!xIsNext); //opposite\r\n  };\r\n\r\n  const jumpTo = (step) => {\r\n    setStepNumber(step);\r\n    setXisNext(step % 2 === 0);\r\n  };\r\n\r\n  const renderMoves = () =>\r\n    history.map((_step, move) => {\r\n      console.log(history[stepNumber])\r\n      const destination = move ? `Go to move #${move}` : \"Go to Start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{destination}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    const resetGame = () => {\r\n      //Reset arrays\r\n      setHistory([Array(9).fill(null)]);\r\n      setStepNumber(0);\r\n      setXisNext(true);\r\n    }  \r\n\r\n  return (\r\n    <div>      \r\n      <Board squares={history[stepNumber]} onClick={handleClick} />   \r\n      <button className=\"reset-button\" onClick={resetGame}>RESET</button>           \r\n      <div className=\"info-wrapper\">\r\n        <div>\r\n          <h3>The Game's History</h3>\r\n          {renderMoves()}\r\n        </div>\r\n        <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;","import './App.css';\nimport Header from './Components/Header';\nimport Game from './Components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}